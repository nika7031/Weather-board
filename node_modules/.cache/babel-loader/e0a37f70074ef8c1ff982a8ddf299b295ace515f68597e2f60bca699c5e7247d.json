{"ast":null,"code":"var _jsxFileName = \"/Users/parnikasharma/weather-app/src/components/forecast/forecast.js\";\nimport { Accordion, AccordionItem, AccordionItemHeading, AccordionItemPanel, AccordionItemButton } from \"react-accessible-accordion\";\nimport \"./forecast.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WEEK_DAYS = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\nconst Forecast = ({\n  data\n}) => {\n  const dayInAWeek = new Date().getDate();\n  const forecastDays = WEEK_DAYS.slice(dayInAWeek, WEEK_DAYS.length).concat(WEEK_DAYS.slice(0, dayInAWeek));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"title\",\n      children: \"Daily\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n      allowZeroExpanded: true,\n      children: data.list.slice(0, 7).map((item, idx) => /*#__PURE__*/_jsxDEV(AccordionItem, {\n        children: [/*#__PURE__*/_jsxDEV(AccordionItemHeading, {\n          children: /*#__PURE__*/_jsxDEV(AccordionItemButton, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"daily_item\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"weather\",\n                className: \"icon-small\",\n                src: `icons/${item.weather[0].icon}.png`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"days\",\n                children: forecastDays[idx]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"description\",\n                children: item.weather[0].description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"min-max\",\n                children: [Math.round(item.main.temp_min), \"\\xB0C /\", Math.round(item.main.temp_max), \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AccordionItemPanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Forecast;\nexport default Forecast;\nvar _c;\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["Accordion","AccordionItem","AccordionItemHeading","AccordionItemPanel","AccordionItemButton","jsxDEV","_jsxDEV","Fragment","_Fragment","WEEK_DAYS","Forecast","data","dayInAWeek","Date","getDate","forecastDays","slice","length","concat","children","className","fileName","_jsxFileName","lineNumber","columnNumber","allowZeroExpanded","list","map","item","idx","alt","src","weather","icon","description","Math","round","main","temp_min","temp_max","_c","$RefreshReg$"],"sources":["/Users/parnikasharma/weather-app/src/components/forecast/forecast.js"],"sourcesContent":["import {\n  Accordion,\n  AccordionItem,\n  AccordionItemHeading,\n  AccordionItemPanel,\n  AccordionItemButton,\n} from \"react-accessible-accordion\";\nimport \"./forecast.css\";\nconst WEEK_DAYS = [\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n  \"Sunday\",\n];\n\nconst Forecast = ({ data }) => {\n  const dayInAWeek = new Date().getDate();\n  const forecastDays = WEEK_DAYS.slice(dayInAWeek, WEEK_DAYS.length).concat(\n    WEEK_DAYS.slice(0, dayInAWeek)\n  );\n\n  return (\n    <>\n      <label className=\"title\">Daily</label>\n      <Accordion allowZeroExpanded>\n        {data.list.slice(0, 7).map((item, idx) => (\n          <AccordionItem key={idx}>\n            <AccordionItemHeading>\n              <AccordionItemButton>\n                <div className=\"daily_item\">\n                  <img\n                    alt=\"weather\"\n                    className=\"icon-small\"\n                    src={`icons/${item.weather[0].icon}.png`}\n                  />\n                  <label className=\"days\">{forecastDays[idx]}</label>\n                  <label className=\"description\">\n                    {item.weather[0].description}\n                  </label>\n                  <label className=\"min-max\">\n                    {Math.round(item.main.temp_min)}°C /\n                    {Math.round(item.main.temp_max)}°C\n                  </label>\n                </div>\n              </AccordionItemButton>\n            </AccordionItemHeading>\n            <AccordionItemPanel></AccordionItemPanel>\n          </AccordionItem>\n        ))}\n      </Accordion>\n    </>\n  );\n};\n\nexport default Forecast;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}