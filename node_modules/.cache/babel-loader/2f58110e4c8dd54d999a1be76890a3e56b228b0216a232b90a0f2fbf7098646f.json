{"ast":null,"code":"var _jsxFileName = \"/Users/parnikasharma/weather-app/src/components/search/search.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { AsyncPaginate } from \"react-select-async-paginate\";\nimport { GEO_API_URL, geoApiOptions } from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = ({\n  onSearchChange\n}) => {\n  _s();\n  /* onSearchChange is a prop */\n\n  const [search, setSearch] = useState(null);\n  const loadOptions = async inputValue => {\n    try {\n      const response = await fetch(`${GEO_API_URL}/cities?minPopulation=1000000&namePrefix=${inputValue}`, geoApiOptions);\n      const data = await response.json();\n      return {\n        options: data.data.map(city => ({\n          value: `${city.latitude} ${city.longitude}`,\n          label: `${city.name}, ${city.countryCode}`\n        })),\n        hasMore: false,\n        additional: {}\n      };\n    } catch (error) {\n      console.error('Error loading options:', error);\n      return {\n        options: [],\n        hasMore: false,\n        additional: {}\n      };\n    }\n  };\n  const handleOnChange = searchData => {\n    setSearch(searchData);\n    onSearchChange(searchData);\n  };\n  return /*#__PURE__*/_jsxDEV(AsyncPaginate, {\n    placeholder: \"Search for city\",\n    debounceTimeout: 600,\n    value: search,\n    onChange: handleOnChange,\n    loadOptions: loadOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"rZ+0pF47En10nDqJpRK7x4d9dB0=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useState","AsyncPaginate","GEO_API_URL","geoApiOptions","jsxDEV","_jsxDEV","Search","onSearchChange","_s","search","setSearch","loadOptions","inputValue","response","fetch","data","json","options","map","city","value","latitude","longitude","label","name","countryCode","hasMore","additional","error","console","handleOnChange","searchData","placeholder","debounceTimeout","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/parnikasharma/weather-app/src/components/search/search.js"],"sourcesContent":["import { useState } from \"react\";\nimport { AsyncPaginate } from \"react-select-async-paginate\";\nimport { GEO_API_URL, geoApiOptions } from \"../../api\";\n\nconst Search = ({ onSearchChange }) => {\n  /* onSearchChange is a prop */\n\n  const [search, setSearch] = useState(null);\n\n  const loadOptions = async (inputValue) => {\n    try {\n      const response = await fetch(\n        `${GEO_API_URL}/cities?minPopulation=1000000&namePrefix=${inputValue}`,\n        geoApiOptions\n      );\n      const data = await response.json();\n\n      return {\n        options: data.data.map((city) => ({\n          value: `${city.latitude} ${city.longitude}`,\n          label: `${city.name}, ${city.countryCode}`,\n        })),\n        hasMore: false, \n        additional: {}, \n      };\n    } catch (error) {\n      console.error('Error loading options:', error);\n      return {\n        options: [],\n        hasMore: false,\n        additional: {},\n      };\n    }\n  };\n\n  const handleOnChange = (searchData) => {\n    setSearch(searchData);\n    onSearchChange(searchData);\n  };\n\n  return (\n    <AsyncPaginate\n      placeholder=\"Search for city\"\n      debounceTimeout={600}\n      value={search}\n      onChange={handleOnChange}\n      loadOptions={loadOptions}\n    />\n  );\n};\n\nexport default Search;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,QAAQ,6BAA6B;AAC3D,SAASC,WAAW,EAAEC,aAAa,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACrC;;EAEA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMW,WAAW,GAAG,MAAOC,UAAU,IAAK;IACxC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAGZ,WAAW,4CAA4CU,UAAU,EAAE,EACtET,aACF,CAAC;MACD,MAAMY,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,OAAO;QACLC,OAAO,EAAEF,IAAI,CAACA,IAAI,CAACG,GAAG,CAAEC,IAAI,KAAM;UAChCC,KAAK,EAAE,GAAGD,IAAI,CAACE,QAAQ,IAAIF,IAAI,CAACG,SAAS,EAAE;UAC3CC,KAAK,EAAE,GAAGJ,IAAI,CAACK,IAAI,KAAKL,IAAI,CAACM,WAAW;QAC1C,CAAC,CAAC,CAAC;QACHC,OAAO,EAAE,KAAK;QACdC,UAAU,EAAE,CAAC;MACf,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,OAAO;QACLX,OAAO,EAAE,EAAE;QACXS,OAAO,EAAE,KAAK;QACdC,UAAU,EAAE,CAAC;MACf,CAAC;IACH;EACF,CAAC;EAED,MAAMG,cAAc,GAAIC,UAAU,IAAK;IACrCrB,SAAS,CAACqB,UAAU,CAAC;IACrBxB,cAAc,CAACwB,UAAU,CAAC;EAC5B,CAAC;EAED,oBACE1B,OAAA,CAACJ,aAAa;IACZ+B,WAAW,EAAC,iBAAiB;IAC7BC,eAAe,EAAE,GAAI;IACrBb,KAAK,EAAEX,MAAO;IACdyB,QAAQ,EAAEJ,cAAe;IACzBnB,WAAW,EAAEA;EAAY;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEN,CAAC;AAAC9B,EAAA,CA7CIF,MAAM;AAAAiC,EAAA,GAANjC,MAAM;AA+CZ,eAAeA,MAAM;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}